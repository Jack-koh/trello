{"version":3,"sources":["store/actions/boards.js","shared/spinner/Spinner.js","pages/login/Login.js","store/actions/auth.js","shared/axios.js","pages/signup/Signup.js","hoc/elements/NavigationItem.js","hoc/layout/SideBar.js","components/dialog/Backdrop.js","components/dialog/createBoard/Dialog_create_board.js","components/main/boards/boardItem/BoardItem.js","store/actions/trello.js","components/main/boards/Boards.js","components/main/template/Tamplate.js","components/main/home/Home.js","pages/main/Main.js","components/popover/user/userPopup.js","hoc/layout/Gnb.js","pages/trello/Trello.js","router/Router.js","App.js","serviceWorker.js","shared/utility.js","store/reducers/auth.js","store/reducers/boards.js","store/reducers/trello.js","store/sagas/auth.js","store/sagas/boards.js","store/sagas/index.js","index.js"],"names":["getBoardItemStart","type","userNo","JSON","parse","localStorage","getItem","Spinner","className","connect","state","userData","auth","dispatch","onLogin","user","email","payload","password","withRouter","props","console","log","useState","setEmail","setPassword","name","setName","loading","setloading","useEffect","history","push","location","src","alt","onSubmit","event","a","async","preventDefault","params","placeholder","autoFocus","value","onChange","target","to","requestRaw","url","method","dataSet","axios","NavigationItem","link","exact","activeClassName","children","SideBar","Backdrop","style","position","left","top","width","height","backgroundColor","color","zIndex","onGetBoardItem","actions","boardTitle","setBoardTitle","bgName","setBgName","teams","setLoading","baseUrl","lastUrl","backgroundList","backgroundEl","map","item","i","key","onClick","e","background","find","el","param","title","post","get","closeDialog","disabled","length","boardItems","boards","list","onSetTrello","data","dialog","setDialog","itemEl","onEnterTrelloHandler","stopPropagation","onFavoriteHandler","createEl","Board","Home","autoAuthCheck","token","Date","getTime","expiration","path","component","Tamplate","onLogout","userEmail","setUserEmail","userName","setUserName","wrapperRef","useRef","outsideClickHandler","current","contains","clickOutsideHandler","document","addEventListener","eamil","split","removeEventListener","ref","Layout","userDialog","setUserDialog","onInitTrelloItem","pathname","GnbRoute","Login","Signup","Main","Trello","defaults","baseURL","App","Boolean","window","hostname","match","updateObject","oldObject","updatedProperties","initialState","loginStart","action","loginSuccess","loginFail","logout","removeItem","reducer","setBoarItems","items","boardNo","regDate","updateDate","setTrello","createdAt","updatedAt","initTrello","login","respData","setItem","userJSON","stringify","userId","put","getBoardItem","takeEvery","composeEnhancers","compose","combineReducers","authReducer","boardsReducer","trello","trelloReducer","sagaMiddleware","createSagaMiddleware","enhencer","applyMiddleware","thunk","store","createStore","run","app","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3ce47f2.chunk.js","sourcesContent":["export const getBoardItemStart = () => {\r\n  const userData = JSON.parse(localStorage.getItem(\"user-data\"));\r\n  return {\r\n    type: \"GET_BOARD_ITEMS_START\",\r\n    userNo: userData.userNo\r\n  };\r\n};\r\n\r\nexport const getBoardItemsSuccess = payload => {\r\n  return {\r\n    type: \"GET_BOARD_ITEMS_SUCCESS\",\r\n    items: payload\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport \"./Spinner.scss\";\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div className=\"spinner-wrap\">\r\n      <div className=\"spinner\">\r\n        <div className=\"rect1\"></div>\r\n        <div className=\"rect2\"></div>\r\n        <div className=\"rect3\"></div>\r\n        <div className=\"rect4\"></div>\r\n        <div className=\"rect5\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport \"./Login.scss\";\r\nimport * as actions from \"store/actions\";\r\n\r\nimport Spinner from \"shared/spinner/Spinner\";\r\n\r\nfunction Login(props) {\r\n  console.log(\"Login - check\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!!token) props.history.push(\"/main/boards\");\r\n  }, [props.userData, props.history]);\r\n\r\n  useEffect(() => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setName(\"\");\r\n  }, [props.location]);\r\n\r\n  useEffect(() => {\r\n    setloading(props.userData.loading);\r\n  }, [props.userData]);\r\n\r\n  const submitHandler = async event => {\r\n    event.preventDefault();\r\n    const params = {\r\n      email: email,\r\n      password: password,\r\n      name: name\r\n    };\r\n\r\n    props.onLogin(params);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"logo_wrap\">\r\n        <img\r\n          src=\"https://d2k1ftgv7pobq7.cloudfront.net/meta/c/p/res/images/trello-header-logos/76ceb1faa939ede03abacb6efacdde16/trello-logo-blue.svg\"\r\n          alt=\"logo\"\r\n        ></img>\r\n      </div>\r\n      <div className=\"form_wrap\">\r\n        <h1>Log in to Trello</h1>\r\n        <form onSubmit={submitHandler}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={event => setEmail(event.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            className=\"scurity_text\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={event => setPassword(event.target.value)}\r\n          />\r\n          <button className=\"login_button\">\r\n            {loading ? <Spinner /> : \"Log In\"}\r\n          </button>\r\n        </form>\r\n        <div className=\"auth-utils\">\r\n          <Link to=\"/find-password\" className=\"find-pw\">\r\n            Cant' log in?\r\n          </Link>\r\n          <i>·</i>\r\n          <Link to=\"/Signup\" className=\"sign-up\">\r\n            Sign up for an account\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogin: userData => dispatch(actions.loginStart(userData))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));\r\n","export const loginStart = payload => {\r\n  return {\r\n    type: \"LOGIN_START\",\r\n    user: {\r\n      email: payload.email,\r\n      password: payload.password\r\n    }\r\n  };\r\n};\r\n\r\nexport const loginSuccess = payload => {\r\n  return {\r\n    type: \"LOGIN_SUCCEED\"\r\n  };\r\n};\r\n\r\nexport const loginFail = () => {\r\n  return {\r\n    type: \"LOGIN_FAIL\"\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return { type: \"LOGOUT\" };\r\n};\r\n\r\nexport const authCheck = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const user = JSON.parse(localStorage.getItem(\"user-data\"));\r\n    if (!token) {\r\n      dispatch(logout());\r\n    } else {\r\n      const now = new Date().getTime() / 1000;\r\n      if (now >= user.expiration) {\r\n        dispatch(logout());\r\n      } else {\r\n        dispatch(loginSuccess());\r\n      }\r\n    }\r\n  };\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"http://localhost:3000/api/\";\r\n\r\nexport const requestRaw = (url, method, params) => {\r\n  let dataSet = \"data\";\r\n  if (method === \"GET\") dataSet = \"params\";\r\n  return axios({\r\n    url: baseUrl + url,\r\n    method: method,\r\n    [dataSet]: params\r\n  });\r\n};\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport \"./Signup.scss\";\r\nimport { requestRaw } from \"shared/axios\";\r\n\r\nimport Spinner from \"shared/spinner/Spinner\";\r\n\r\nfunction Signup(props) {\r\n  console.log(\"Login - check\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!!token) props.history.push(\"/main\");\r\n  }, [props.userData, props.history]);\r\n\r\n  useEffect(() => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setName(\"\");\r\n  }, [props.location]);\r\n\r\n  const submitHandler = async event => {\r\n    event.preventDefault();\r\n    const params = {\r\n      email: email,\r\n      password: password,\r\n      name: name\r\n    };\r\n    try {\r\n      setloading(true);\r\n      await requestRaw(\"auth/signup\", \"PUT\", params);\r\n      setloading(false);\r\n      props.history.push(\"/Login\");\r\n    } catch (err) {\r\n      setloading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"logo_wrap\">\r\n        <img\r\n          src=\"https://d2k1ftgv7pobq7.cloudfront.net/meta/c/p/res/images/trello-header-logos/76ceb1faa939ede03abacb6efacdde16/trello-logo-blue.svg\"\r\n          alt=\"logo\"\r\n        ></img>\r\n      </div>\r\n      <div className=\"form_wrap\">\r\n        <h1>Sign in to Trello</h1>\r\n        <form onSubmit={submitHandler}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={event => setEmail(event.target.value)}\r\n          />\r\n          <input\r\n            className=\"scurity_text\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={event => setPassword(event.target.value)}\r\n          />\r\n          <input\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={event => setName(event.target.value)}\r\n          />\r\n          <button className=\"signup-button\">\r\n            {loading ? <Spinner /> : \"Continue\"}\r\n          </button>\r\n        </form>\r\n        <div className=\"auth-utils\">\r\n          <Link to=\"/Login\" className=\"sign-up\">\r\n            Already have an account? Log In\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(Signup);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./NavigationItem.scss\";\r\n\r\nconst NavigationItem = props => {\r\n  console.log(\"NavigationItem - check\");\r\n  return (\r\n    <li className=\"NavigationItem\">\r\n      <NavLink to={props.link} exact={props.exact} activeClassName=\"active\">\r\n        {props.children}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NavigationItem;\r\n","import React from \"react\";\r\nimport { MdDashboard, MdPoll, MdTimeline } from \"react-icons/md\";\r\n\r\nimport NavigationItem from \"hoc/elements/NavigationItem\";\r\nimport \"./SideBar.scss\";\r\n\r\nconst SideBar = props => {\r\n  return (\r\n    <div className=\"side_bar_layout\">\r\n      <nav className=\"side_bar_wrap\">\r\n        <ul>\r\n          <NavigationItem link=\"/main/boards\" exact>\r\n            <MdPoll />\r\n            <span>Boards</span>\r\n          </NavigationItem>\r\n          <NavigationItem link=\"/main/template\" exact>\r\n            <MdDashboard />\r\n            <span>Template</span>\r\n          </NavigationItem>\r\n          <NavigationItem link=\"/main/home\" exact>\r\n            <MdTimeline />\r\n            <span>Home</span>\r\n          </NavigationItem>\r\n        </ul>\r\n      </nav>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nfunction Backdrop() {\r\n  const style = {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.7)\",\r\n    color: \"#ffffff\",\r\n    zIndex: 10\r\n  };\r\n\r\n  return <div style={style} />;\r\n}\r\n\r\nexport default Backdrop;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"store/actions\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport axios from \"axios\";\r\nimport \"./Dialog_create_board.scss\";\r\n\r\nimport Spinner from \"shared/spinner/Spinner\";\r\n\r\nimport Backdrop from \"components/dialog/Backdrop\";\r\n\r\nfunction DialogCreateBoard(props) {\r\n  const [boardTitle, setBoardTitle] = useState(\"\");\r\n  const [bgName, setBgName] = useState(\"bg-forest\");\r\n  const [teams, setTeams] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const createBoardHandler = async e => {\r\n    e.preventDefault();\r\n    const background = backgroundList.find(el => el.name === bgName);\r\n    const userData = JSON.parse(localStorage.getItem(\"user-data\"));\r\n    const param = {\r\n      title: boardTitle,\r\n      background: background,\r\n      teams: teams,\r\n      userNo: userData.userNo\r\n    };\r\n    try {\r\n      setLoading(true);\r\n      await axios.post(\"boards/create\", param);\r\n      await axios.get(\"boards/get\", { userNo: param.userNo });\r\n      setLoading(false);\r\n      props.closeDialog();\r\n    } catch (err) {\r\n      console.log(\"create-board-errer\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const baseUrl = \"https://images.unsplash.com/photo-\";\r\n  const lastUrl = \"&auto=format&fit=crop&w=1350&q=80\";\r\n  const backgroundList = [\r\n    {\r\n      type: \"image\",\r\n      name: \"bg-forest\",\r\n      url: `${baseUrl}1500762728065-466b7a170c96?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9${lastUrl}`\r\n    },\r\n    {\r\n      type: \"image\",\r\n      name: \"bg-sandcave\",\r\n      url: `${baseUrl}1444076784383-69ff7bae1b0a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9${lastUrl}`\r\n    },\r\n    {\r\n      type: \"image\",\r\n      name: \"bg-bird\",\r\n      url: `${baseUrl}1578279043004-e218349bfdfd?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9${lastUrl}`\r\n    },\r\n    {\r\n      type: \"image\",\r\n      name: \"bg-mountain\",\r\n      url: `${baseUrl}1493246507139-91e8fad9978e?ixlib=rb-1.2.1${lastUrl}`\r\n    },\r\n    { type: \"color\", name: \"bg-blue\" },\r\n    { type: \"color\", name: \"bg-yellow\" },\r\n    { type: \"color\", name: \"bg-green\" },\r\n    { type: \"color\", name: \"bg-brown\" },\r\n    { type: \"color\", name: \"bg-brown\" }\r\n  ];\r\n\r\n  const backgroundEl = backgroundList.map((item, i) => {\r\n    return (\r\n      <li\r\n        key={i}\r\n        className={`choice-card ${item.name}`}\r\n        onClick={() => setBgName(item.name)}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"create-board-dialog\">\r\n        <form onSubmit={createBoardHandler}>\r\n          <div className=\"set-board\">\r\n            <div className={`board-card ${bgName}`}>\r\n              <MdClose onClick={props.closeDialog} />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Add board title\"\r\n                value={boardTitle}\r\n                onChange={e => setBoardTitle(e.target.value)}\r\n              />\r\n            </div>\r\n            <ul className=\"card-background\">{backgroundEl}</ul>\r\n          </div>\r\n\r\n          <div className=\"bottom-utils\">\r\n            <button disabled={boardTitle.length === 0}>\r\n              {loading ? <Spinner /> : \"Create Board\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <Backdrop />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onGetBoardItem: userNo => {\r\n      dispatch(actions.getBoardItemStart(userNo));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(DialogCreateBoard);\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as actions from \"store/actions\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./BoardItem.scss\";\r\nimport { MdStarBorder } from \"react-icons/md\";\r\n\r\nimport DialogCreateBoard from \"components/dialog/createBoard/Dialog_create_board\";\r\n\r\nconst BoardItem = props => {\r\n  console.log(\"BoardItem - check\");\r\n  const [dialog, setDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Board - mounted\");\r\n    props.onGetBoardItem();\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onCreateDialogHandler = () => {\r\n    setDialog(!dialog);\r\n  };\r\n\r\n  const onCloseDialogHandler = () => {\r\n    setDialog(false);\r\n    props.onGetBoardItem();\r\n  };\r\n\r\n  const onEnterTrelloHandler = item => {\r\n    props.onSetTrello(item);\r\n    props.history.push(`/board/${item.title}`);\r\n  };\r\n\r\n  const onFavoriteHandler = (e, item) => {\r\n    e.stopPropagation();\r\n    console.log(item);\r\n  };\r\n\r\n  const itemEl = props.boardItems.map((item, i) => {\r\n    return (\r\n      <li\r\n        key={i}\r\n        className={`board-item ${item.background.name}`}\r\n        onClick={() => onEnterTrelloHandler(item)}\r\n      >\r\n        <div className=\"board-item-inner\">\r\n          <span className=\"item-title\">{item.title}</span>\r\n        </div>\r\n        <div className=\"board-hover-action\">\r\n          <MdStarBorder onClick={e => onFavoriteHandler(e, item)} />\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  const createEl = (\r\n    <li className=\"board-item bg-gray\" onClick={onCreateDialogHandler}>\r\n      <div className=\"board-item-inner create\">\r\n        <span className=\"create-item-title\">Create new board</span>\r\n      </div>\r\n      <div className=\"create-hover-action\"></div>\r\n    </li>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <ul className=\"board-item-section\">\r\n        {!!props.boardItems.length && itemEl}\r\n        {createEl}\r\n      </ul>\r\n      {dialog && <DialogCreateBoard closeDialog={onCloseDialogHandler} />}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nBoardItem.propTypes = {\r\n  boardItems: propTypes.array\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boardItems: state.boards.list\r\n  };\r\n};\r\n\r\nconst mapDispatchToProp = dispatch => {\r\n  return {\r\n    onGetBoardItem: userNo => {\r\n      dispatch(actions.getBoardItemStart(userNo));\r\n    },\r\n    onSetTrello: item => {\r\n      dispatch(actions.setTrelloItem(item));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProp\r\n)(withRouter(BoardItem));\r\n","export const setTrelloItem = payload => {\r\n  return {\r\n    type: \"SET_TRELLO_ITEM\",\r\n    data: payload\r\n  };\r\n};\r\n\r\nexport const initTrelloItem = payload => {\r\n  return {\r\n    type: \"INIT_TRELLO_ITEM\"\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { MdPersonOutline } from \"react-icons/md\";\r\nimport \"./Boards.scss\";\r\nimport BoardItem from \"./boardItem/BoardItem\";\r\n\r\nfunction Board() {\r\n  console.log(\"Board - created\");\r\n\r\n  return (\r\n    <div className=\"board-wrap\">\r\n      <div className=\"board-inner-area\">\r\n        <div className=\"board-section\">\r\n          <div className=\"board-title\">\r\n            <MdPersonOutline />\r\n            <span>Personal Boards</span>\r\n          </div>\r\n          <BoardItem />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./template.scss\";\r\n\r\nfunction Template() {\r\n  console.log(\"Template - check\");\r\n  return (\r\n    <div className=\"template-wrap\">\r\n      <div className=\"template-inner-area\">Template</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Template);\r\n","import React from \"react\";\r\nimport \"./Home.scss\";\r\n\r\nfunction Home() {\r\n  console.log(\"Home - check\");\r\n  return (\r\n    <div className=\"home-wrap\">\r\n      <div className=\"home-inner-area\">Home</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"store/actions\";\r\n\r\nimport SideBar from \"hoc/layout/SideBar\";\r\nimport Board from \"components/main/boards/Boards\";\r\nimport Tamplate from \"components/main/template/Tamplate\";\r\nimport Home from \"components/main/home/Home\";\r\n\r\nfunction Main(props) {\r\n  console.log(\"Main - created\");\r\n  useEffect(() => {\r\n    props.autoAuthCheck();\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      props.history.push(\"/Login\");\r\n    }\r\n  }, [props]);\r\n\r\n  return (\r\n    <SideBar>\r\n      <Route path=\"/main/boards\" component={Board}></Route>\r\n      <Route path=\"/main/template\" component={Tamplate}></Route>\r\n      <Route path=\"/main/home\" component={Home}></Route>\r\n    </SideBar>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    autoAuthCheck: () => dispatch(actions.authCheck())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(Main));\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./userPopup.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"store/actions\";\r\n\r\nfunction Dialog(props) {\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // 클릭 아웃사이드 기능 생성 및 제거1\r\n    const outsideClickHandler = e => {\r\n      if (wrapperRef.current.contains(e.target)) return;\r\n      props.clickOutsideHandler(e);\r\n    };\r\n\r\n    document.addEventListener(\"click\", outsideClickHandler, true);\r\n    const userData = JSON.parse(localStorage.getItem(\"user-data\"));\r\n    const eamil = userData.email;\r\n    const name = userData.name;\r\n    if (eamil && name) {\r\n      setUserEmail(eamil.split(\"@\")[0]);\r\n      setUserName(name);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", outsideClickHandler, true);\r\n    };\r\n  }, [props]);\r\n\r\n  const logoutHandler = () => {\r\n    props.onLogout();\r\n    props.history.push(\"/Login\");\r\n  };\r\n\r\n  return (\r\n    <div ref={wrapperRef} className=\"user-dialog\">\r\n      <div className=\"user-dialog-content\">\r\n        <div className=\"user-dialog-inner\">\r\n          <div className=\"user-dialog-title\">\r\n            {`${userEmail} (${userName})`}\r\n          </div>\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <div>Profile and Visibility</div>\r\n              </li>\r\n              <li>\r\n                <div>Activity</div>\r\n              </li>\r\n              <li>\r\n                <div>Cards</div>\r\n              </li>\r\n              <li className=\"line-break\">\r\n                <div>Settings</div>\r\n              </li>\r\n              <li>\r\n                <div>Help</div>\r\n              </li>\r\n              <li className=\"line-break\">\r\n                <div>Shortcuts</div>\r\n              </li>\r\n              <li onClick={logoutHandler}>\r\n                <div>Log Out</div>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.logout())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(Dialog));\r\n","import React, { Fragment, useState } from \"react\";\r\nimport {\r\n  MdHome,\r\n  MdPoll,\r\n  MdSearch,\r\n  MdAdd,\r\n  MdInfoOutline,\r\n  MdAddAlert,\r\n  MdAccountCircle\r\n} from \"react-icons/md\";\r\nimport UserDialog from \"components/popover/user/userPopup\";\r\nimport \"./Gnb.scss\";\r\n\r\nconst Layout = props => {\r\n  const [userDialog, setUserDialog] = useState(false);\r\n\r\n  const onDialogHandler = e => {\r\n    e.preventDefault();\r\n    setUserDialog(!userDialog);\r\n  };\r\n\r\n  const clickOutsideHandler = e => {\r\n    e.stopPropagation();\r\n    if (userDialog) {\r\n      setUserDialog(!userDialog);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"gnb_wrap\">\r\n        <div className=\"gnb_left\">\r\n          <div className=\"rectangle_btn common_btn\">\r\n            <MdHome />\r\n          </div>\r\n          <div className=\"board_btn common_btn\">\r\n            <MdPoll />\r\n            Boards\r\n          </div>\r\n          <div className=\"search_input_wrap\">\r\n            <input className=\"search_input\" />\r\n            <MdSearch />\r\n          </div>\r\n        </div>\r\n        <div className=\"logo\"></div>\r\n        <div className=\"gnb_right\">\r\n          <div className=\"rectangle_btn common_btn\">\r\n            <MdAdd />\r\n          </div>\r\n          <div className=\"rectangle_btn common_btn\">\r\n            <MdInfoOutline />\r\n          </div>\r\n          <div className=\"rectangle_btn common_btn\">\r\n            <MdAddAlert />\r\n          </div>\r\n          <div className=\"circle_btn\">\r\n            <MdAccountCircle onClick={onDialogHandler} />\r\n            {userDialog && (\r\n              <UserDialog clickOutsideHandler={clickOutsideHandler} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {props.children}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"store/actions\";\r\n\r\nfunction Board(props) {\r\n  useEffect(() => {\r\n    return () => {\r\n      props.onInitTrelloItem();\r\n    };\r\n  }, []);\r\n\r\n  return <div>안녕하세요</div>;\r\n}\r\n\r\nconst mapDispatchToProp = dispatch => {\r\n  return {\r\n    onInitTrelloItem: () => dispatch(actions.initTrelloItem())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProp)(Board);\r\n","import React from \"react\";\r\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\r\nimport Login from \"pages/login/Login\";\r\nimport Signup from \"pages/signup/Signup\";\r\nimport Main from \"pages/main/Main\";\r\nimport Gnb from \"hoc/layout/Gnb\";\r\nimport Trello from \"pages/trello/Trello\";\r\n\r\nfunction Router(props) {\r\n  if (props.location.pathname === \"/\") {\r\n    props.history.push(\"/Login\");\r\n  }\r\n\r\n  const GnbRoute = ({ component: component, path: path }) => {\r\n    return (\r\n      <Gnb>\r\n        <Route component={component} path={path} />\r\n      </Gnb>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/Login\" component={Login}></Route>\r\n      <Route path=\"/Signup\" component={Signup}></Route>\r\n      <GnbRoute path=\"/main\" component={Main}></GnbRoute>\r\n      <GnbRoute path=\"/board\" component={Trello}></GnbRoute>\r\n      <Redirect to=\"/Login\" />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default withRouter(Router);\r\n","import React from \"react\";\r\nimport Router from \"router/Router\";\r\n\r\n// base url설정\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"/api/\";\r\n\r\nconst App = props => {\r\n  return <Router />;\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import { updateObject } from \"shared/utility\";\r\n\r\nconst initialState = {\r\n  loading: false\r\n};\r\n\r\nconst loginStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst loginSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst loginFail = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst logout = (state, action) => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"user-data\");\r\n  return updateObject(state, {\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCEED\":\r\n      return loginSuccess(state, action.user);\r\n    case \"LOGIN_FAIL\":\r\n      return loginFail();\r\n    case \"LOGIN_START\":\r\n      return loginStart();\r\n    case \"LOGOUT\":\r\n      return logout();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { updateObject } from \"shared/utility\";\r\n\r\nconst initialState = {\r\n  list: []\r\n};\r\n\r\nconst setBoarItems = (state, list) => {\r\n  return updateObject(state, {\r\n    list: list\r\n  });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_BOARD_ITEMS_SUCCESS\":\r\n      return setBoarItems(state, action.items);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { updateObject } from \"shared/utility\";\r\n\r\nconst initialState = {\r\n  userNo: null,\r\n  boardNo: null,\r\n  title: null,\r\n  background: {\r\n    type: \"\",\r\n    name: \"\"\r\n  },\r\n  regDate: null,\r\n  updateDate: null\r\n};\r\n\r\nconst setTrello = (state, data) => {\r\n  return updateObject(state, {\r\n    userNo: data.userNo,\r\n    boardNo: data.boardNo,\r\n    title: data.title,\r\n    background: {\r\n      type: data.background.type,\r\n      name: data.background.name\r\n    },\r\n    regDate: data.createdAt,\r\n    updateDate: data.updatedAt\r\n  });\r\n};\r\n\r\nconst initTrello = (state, data) => {\r\n  return updateObject(state, {\r\n    userNo: null,\r\n    boardNo: null,\r\n    title: null,\r\n    background: {\r\n      type: \"\",\r\n      name: \"\"\r\n    },\r\n    regDate: null,\r\n    updateDate: null\r\n  });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_TRELLO_ITEM\":\r\n      return setTrello(state, action.data);\r\n    case \"INIT_TRELLO_ITEM\":\r\n      return initTrello();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { put } from \"redux-saga/effects\";\r\nimport * as actions from \"../actions/index\";\r\nimport { requestRaw } from \"shared/axios\";\r\n\r\nexport function* login(action) {\r\n  try {\r\n    const respData = yield requestRaw(\"auth/login\", \"POST\", action.user);\r\n    yield localStorage.setItem(\"token\", respData.data.token);\r\n    const userJSON = JSON.stringify({\r\n      userId: respData.data.userId,\r\n      expiration: respData.data.expiration,\r\n      email: respData.data.email,\r\n      name: respData.data.name,\r\n      userNo: respData.data.userNo\r\n    });\r\n    yield localStorage.setItem(\"user-data\", userJSON);\r\n    yield put(actions.loginSuccess());\r\n  } catch (err) {\r\n    yield put(actions.loginFail());\r\n    console.log(\"Login Fail -----\");\r\n  }\r\n}\r\n","import { put } from \"redux-saga/effects\";\r\nimport * as actions from \"../actions/index\";\r\nimport { requestRaw } from \"shared/axios\";\r\n\r\nexport function* getBoardItem(action) {\r\n  try {\r\n    const param = { userNo: action.userNo };\r\n    const respData = yield requestRaw(\"boards/get\", \"GET\", param);\r\n    yield put(actions.getBoardItemsSuccess(respData.data.list));\r\n  } catch (err) {}\r\n}\r\n","import { takeEvery } from \"redux-saga/effects\";\r\nimport { login } from \"./auth\";\r\nimport { getBoardItem } from \"./boards\";\r\n\r\nexport function* auth() {\r\n  yield takeEvery(\"LOGIN_START\", login);\r\n}\r\n\r\nexport function* boards() {\r\n  yield takeEvery(\"GET_BOARD_ITEMS_START\", getBoardItem);\r\n}\r\n","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { Provider } from \"react-redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport authReducer from \"store/reducers/auth\";\r\nimport boardsReducer from \"store/reducers/boards\";\r\nimport trelloReducer from \"store/reducers/trello\";\r\n\r\nimport { auth, boards } from \"store/sagas/index\";\r\n\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : null || compose;\r\n\r\nconst reducer = combineReducers({\r\n  auth: authReducer,\r\n  boards: boardsReducer,\r\n  trello: trelloReducer\r\n});\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst enhencer = composeEnhancers(applyMiddleware(thunk, sagaMiddleware));\r\nconst store = createStore(reducer, enhencer);\r\n\r\nsagaMiddleware.run(auth);\r\nsagaMiddleware.run(boards);\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}